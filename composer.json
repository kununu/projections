{
  "name": "kununu/projections",
  "description": "Handle projections of items to cache",
  "license": "MIT",
  "type": "library",
  "keywords": [
    "cache",
    "projections",
    "symfony"
  ],
  "authors": [
    {
      "name": "Diogo Rocha",
      "email": "diogo.rocha@kununu.com"
    },
    {
      "name": "Hugo GonÃ§alves",
      "email": "hugo.goncalves@kununu.com"
    }
  ],
  "require": {
    "php": ">=8.3"
  },
  "require-dev": {
    "ext-igbinary": "*",
    "ext-json": "*",
    "ext-zlib": "*",
    "jms/serializer": "^3.28",
    "kununu/scripts": ">=6.1",
    "phpstan/phpstan": "^2.1",
    "phpstan/phpstan-phpunit": "^2.0",
    "phpunit/phpunit": "^12.3",
    "rector/rector": "^2.0",
    "shipmonk/composer-dependency-analyser": "^1.8",
    "symfony/cache": "^6.4",
    "symfony/property-access": "^6.4",
    "symfony/serializer": "^6.4",
    "symfony/yaml": "^6.4"
  },
  "suggest": {
    "ext-igbinary": "To use IgBinary cache serializers",
    "ext-zlib": "To use deflated cache serializers",
    "jms/serializer": "To use JMSSerializer cache serializers",
    "symfony/cache": "To use SymfonyCacheProjectionRepository",
    "symfony/property-access": "To use Symfony Serializer cache serializers",
    "symfony/serializer": "To use Symfony Serializer cache serializers"
  },
  "minimum-stability": "stable",
  "autoload": {
    "psr-4": {
      "Kununu\\Projections\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "Kununu\\Projections\\Tests\\": "tests/"
    }
  },
  "config": {
    "allow-plugins": {
      "kununu/scripts": true
    }
  },
  "scripts": {
    "cs": "composer kununu:cs-fixer-code src/ tests/",
    "phpstan": "phpstan",
    "rector": "rector process --dry-run --config rector-ci.php src/ tests/",
    "test": "phpunit --no-coverage --no-logging --no-progress",
    "test-coverage": "XDEBUG_MODE=coverage phpunit"
  },
  "scripts-descriptions": {
    "cs": "Run PHP CS Fixer with kununu code standards",
    "phpstan": "Run PHPStan",
    "rector": "Run Rector in dry-run mode with CI rules",
    "test": "Run all tests",
    "test-coverage": "Run all tests with coverage report"
  }
}
